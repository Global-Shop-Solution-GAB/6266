Program.Sub.ScreenSU.Start
Gui.f_Main..Create(BaseForm)
Gui.f_Main..Caption("WIP Cutoff Report")
Gui.f_Main..Size(1154,758)
Gui.f_Main..MinX(0)
Gui.f_Main..MinY(0)
Gui.f_Main..Position(0,0)
Gui.f_Main..AlwaysOnTop(False)
Gui.f_Main..FontName("Tahoma")
Gui.f_Main..FontSize(8.25)
Gui.f_Main..ControlBox(True)
Gui.f_Main..MaxButton(True)
Gui.f_Main..MinButton(True)
Gui.f_Main..MousePointer(0)
Gui.f_Main..Moveable(True)
Gui.f_Main..Sizeable(False)
Gui.f_Main..ShowInTaskBar(True)
Gui.f_Main..TitleBar(True)
Gui.f_Main..Event(UnLoad,f_Main_UnLoad)
Gui.f_Main.GsGCWIP.Create(GsGridControl)
Gui.f_Main.GsGCWIP.Enabled(True)
Gui.f_Main.GsGCWIP.Visible(True)
Gui.f_Main.GsGCWIP.Zorder(0)
Gui.f_Main.GsGCWIP.Size(1154,693)
Gui.f_Main.GsGCWIP.Position(0,35)
Gui.f_Main.GsGCWIP.Dock(2)
Gui.f_Main.GsGCWIP.Anchor(15)
Gui.f_Main.cmdLoad.Create(Button)
Gui.f_Main.cmdLoad.Enabled(True)
Gui.f_Main.cmdLoad.Visible(True)
Gui.f_Main.cmdLoad.Zorder(0)
Gui.f_Main.cmdLoad.Size(54,23)
Gui.f_Main.cmdLoad.Position(1028,6)
Gui.f_Main.cmdLoad.Caption("REFRESH")
Gui.f_Main.cmdLoad.FontName("Tahoma")
Gui.f_Main.cmdLoad.FontSize(8.25)
Gui.f_Main.cmdLoad.Anchor(9)
Gui.f_Main.cmdLoad.Event(Click,cmdLoad_Click)
Gui.f_Main.cmdExport.Create(Button)
Gui.f_Main.cmdExport.Enabled(True)
Gui.f_Main.cmdExport.Visible(True)
Gui.f_Main.cmdExport.Zorder(0)
Gui.f_Main.cmdExport.Size(54,23)
Gui.f_Main.cmdExport.Position(1089,6)
Gui.f_Main.cmdExport.Caption("Export")
Gui.f_Main.cmdExport.FontName("Tahoma")
Gui.f_Main.cmdExport.FontSize(8.25)
Gui.f_Main.cmdExport.Anchor(9)
Gui.f_Main.cmdExport.Event(Click,cmdExport_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)


F.Intrinsic.Control.CallSub(CreateGrid)
Gui.f_Main..Show

F.Intrinsic.Control.CallSub(cmdLoad_Click)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6266", "ProjectTitle", "Work in Process Cutoff Report", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.CreateGrid.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtWO.Exists)
	F.Data.DataTable.Close("dtWO")
F.Intrinsic.Control.EndIf

F.Data.DataTable.Create("dtWO", True)
F.Data.DataTable.AddColumn("dtWO", "JOB", "STRING")
F.Data.DataTable.AddColumn("dtWO", "SUFFIX", "STRING")
F.Data.DataTable.AddColumn("dtWO", "SORT_CODE", "STRING")
F.Data.DataTable.AddColumn("dtWO", "SEQ", "STRING")
F.Data.DataTable.AddColumn("dtWO", "PART", "STRING")
F.Data.DataTable.AddColumn("dtWO", "DESCRIPTION", "STRING")
F.Data.DataTable.AddColumn("dtWO", "WC", "STRING")
F.Data.DataTable.AddColumn("dtWO", "DEPT", "STRING")
F.Data.DataTable.AddColumn("dtWO", "COST", "FLOAT")
F.Data.DataTable.AddColumn("dtWO", "GOOD_PCS", "FLOAT")
F.Data.DataTable.AddColumn("dtWO", "EXT_LABOR_COST", "FLOAT")
F.Data.DataTable.AddColumn("dtWO", "TOT_EST_MAT_COST", "FLOAT")
F.Data.DataTable.AddColumn("dtWO", "PARTIALS", "FLOAT")

F.Data.DataTable.AddExpressionColumn("dtWO", "TOT_WIP", "FLOAT", " [TOT_EST_MAT_COST] + [EXT_LABOR_COST]")

'added a DV to sort the data because i merge more data into the DataTable - Bix Janurary 12, 2022
F.Data.DataView.Create("dtWO","dvView",22,"","JOB asc, SUFFIX asc, SEQ asc")

F.Intrinsic.Control.CallSub(FormatGrid)
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6266", "ProjectTitle", "Work in Process Cutoff Report", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.CreateGrid.End

Program.Sub.FormatGrid.Start
F.Intrinsic.Control.Try
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

'Gui.f_Main.GsGCWIP.AddGridviewFromDatatable("gvWIP", "dtWO")
Gui.f_Main.GsGCWIP.AddGridviewFromDataView("gvWIP", "dtWO","dvView")
V.Local.sGV.Set("gvWIP")

Gui.f_Main.GsGCWIP.SetGridviewProperty(V.Local.sGV, "AllowColumnResizing", True)
Gui.f_Main.GsGCWIP.SetGridviewProperty(V.Local.sGV, "AllowColumnMoving", True)
Gui.f_Main.GsGCWIP.SetGridviewProperty(V.Local.sGV, "Showgrouppanel", False)
Gui.f_Main.GsGCWIP.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", True)

Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SUFFIX", "Visible", False)


V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "JOB", V.Local.sProperty, "Job")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SUFFIX", V.Local.sProperty, "Suffix")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SORT_CODE", V.Local.sProperty, "Sort Code")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SEQ", V.Local.sProperty, "Sequence")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, "WO Part")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, "Part Description")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "WC", V.Local.sProperty, "Work Center")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DEPT", V.Local.sProperty, "Department")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "COST", V.Local.sProperty, "Cost Per Unit")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "GOOD_PCS", V.Local.sProperty, "Good Parts")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "EXT_LABOR_COST", V.Local.sProperty, "Extended Cost")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_EST_MAT_COST", V.Local.sProperty, "Total Act. Material Cost")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PARTIALS", V.Local.sProperty, "Partials")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_WIP", V.Local.sProperty, "Total WIP Value")

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "JOB", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SUFFIX", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SORT_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "WC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DEPT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "GOOD_PCS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "EXT_LABOR_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_EST_MAT_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PARTIALS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_WIP", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Center")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "JOB", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SUFFIX", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SORT_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "WC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DEPT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "GOOD_PCS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "EXT_LABOR_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_EST_MAT_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PARTIALS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_WIP", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "JOB", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SUFFIX", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SORT_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "WC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DEPT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "GOOD_PCS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "EXT_LABOR_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_EST_MAT_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PARTIALS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_WIP", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "JOB", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SUFFIX", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SORT_CODE", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "SEQ", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PART", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DESCRIPTION", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "WC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "DEPT", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "GOOD_PCS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "EXT_LABOR_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_EST_MAT_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PARTIALS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_WIP", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("DisplayCustomNumeric")
V.Local.sDefault.Set("$#,###,###,##0.00")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "EXT_LABOR_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_EST_MAT_COST", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "TOT_WIP", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("DisplayCustomNumeric")
V.Local.sDefault.Set("#,###,###,##0.00")
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "GOOD_PCS", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGCWIP.SetColumnProperty(V.Local.sGV, "PARTIALS", V.Local.sProperty, V.Local.sDefault)

gui.f_Main.GsGCWIP.MainView(V.Local.sGV)
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6266", "ProjectTitle", "Work in Process Cutoff Report", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormatGrid.End

Program.Sub.cmdLoad_Click.Start
F.Intrinsic.Control.Try
V.Local.dCutoffDate.Declare(Date)
V.Local.fAmtMaterial.Declare(Float)
V.Local.fTotAmtMaterial.Declare(Float)
V.Local.fUnitsCompl.Declare(Float)
V.Local.fHrsActual.Declare(Float)
v.Local.fTotHrsActual.Declare(Float)
V.Local.fTotEstMatCost.Declare(Float)
v.Local.fUnit.Declare(Float)
V.Local.fCost.Declare(Float)
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iCnt3.Declare(Long)
V.Local.sCutoffDate.Declare(String)
V.Local.sFilter.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSuffix.Declare(String)
V.Local.sJS.Declare(String)
V.Local.sRet.Declare(String)
v.Local.sRet2.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sParts.Declare(String)
V.Local.sPartRate.Declare(String)
V.Local.sMaterialPart.Declare(String)

f.Intrinsic.UI.InvokeWaitDialog("Loading Job Information...", "Please Wait")

F.Intrinsic.Control.If(V.DataTable.dtWIP.Exists)
	F.Data.DataTable.DeleteRow("dtWO")
	F.Data.DataTable.AcceptChanges("dtWO")
	F.Data.DataTable.Close("dtWIP")
F.Intrinsic.Control.EndIf

'V.Local.dCutoffDate.Set(V.Screen.f_Main!dtpCutoff.Value)
F.Intrinsic.String.Format(V.Local.dCutoffDate, "YYYY-MM-DD", V.Local.sCutoffDate)

F.Intrinsic.String.Build("SELECT A.JOB, A.SUFFIX, '' as SORT_CODE, (A.JOB + A.SUFFIX) AS 'JS', A.SEQ, RTRIM(C.PART) as PART, '' as DESCRIPTION, A.PART AS WC, E.WC_DEPT AS DEPT, A.UNITS_COMPLETE, A.DOLLARS_ESTIMATED, A.HOURS_ESTIMATED, IF(A.UNITS IS NULL, 0.00, A.UNITS) AS RUN_TIME, IF(A.BURDEN IS NULL, 0.00, A.BURDEN) AS RATE, 0.00 AS PARTIALS, 0.00 AS TOT_EST_MAT_COST FROM V_JOB_OPERATIONS A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX= C.SUFFIX LEFT JOIN V_INVENTORY_COST D ON C.PART = D.PART LEFT JOIN V_WORKCENTERS E ON A.PART = E.MACHINE WHERE A.LMO = 'L'  AND A.DATE_START >= '1900-01-01' AND C.DATE_CLOSED = '1900-01-01' AND A.SEQ < '900000' ORDER BY A.JOB, A.SUFFIX, A.SEQ", v.Local.sCutoffDate, v.Local.sSQL)


F.Data.DataTable.CreateFromSQL("dtWIP", "con", V.Local.sSQL, True)
F.Data.DataTable.AddExpressionColumn("dtWIP", "COST", "FLOAT", "IIF([RUN_TIME] = 0, 0.00,[RATE] / [RUN_TIME])")
'F.Data.DataTable.AddExpressionColumn("dtWIP", "COST", "FLOAT", "IIF(HOURS_ESTIMATED = 0, 0.00, [LABOR_COST] / [HOURS_ESTIMATED])")
F.Data.DataTable.AddExpressionColumn("dtWIP", "EXT_LABOR_COST", "FLOAT", "[COST] * [UNITS_COMPLETE]")

'Merge data into dtWIP for Outside services - Bix Jan 12, 2022
F.Data.DataTable.CreateFromSQL("dtO","con","select A.JOB, A.SUFFIX, '' as SORT_CODE, A.JOB + A.SUFFIX as JS, A.SEQ, RTRIM(C.PART) as PART, '' as DESCRIPTION, 'OUTSIDE' as WC, A.OPERATION as DEPT, A.HOURS_ACTUAL as UNITS_COMPLETE, A.HOURS_ESTIMATED * A.BURDEN as DOLLARS_ESTIMATED, A.HOURS_ESTIMATED, A.UNITS as RUN_TIME, A.BURDEN as RATE, 0.00 as PARTIALS, 0.00 as TOT_EST_MAT_COST from V_JOB_OPERATIONS A LEFT JOIN V_JOB_HEADER C on A.JOB = C.JOB and A.SUFFIX = C.SUFFIX WHERE A.LMO = 'O'  AND A.DATE_START >= '1900-01-01' AND C.DATE_CLOSED = '1900-01-01' AND A.SEQ < '900000' ORDER BY A.JOB, A.SUFFIX, A.SEQ",True)
F.Data.DataTable.Merge("dtO","dtWIP",True,2)
F.Data.DataTable.Close("dtO")

F.Data.Dictionary.CreateFromSQL("dictPartial","con","SELECT (JOB + SUFFIX) AS 'JS', (AMT_PARTIAL_SHPMNT - OUTS) AS PARTIALS FROM V_JOB_HEADER ORDER BY JOB,SUFFIX")
F.Data.Dictionary.SetDefaultReturn("dictPartial", 0.00)
F.Data.DataTable.FillFromDictionary("dtWIP", "dictPartial", "JS", "PARTIALS")
F.Data.Dictionary.Close("dictPartial")

'Dict for Part Description -SS 2/21/22
F.Data.Dictionary.CreateFromSQL("dictDescription","con","SELECT RTRIM(Part), RTRIM(Description) From INVENTORY_MSTR")
F.Data.Dictionary.SetDefaultReturn("dictDescription","")
F.Data.DataTable.FillFromDictionary("dtWIP", "dictDescription", "PART", "DESCRIPTION")
F.Data.Dictionary.Close("dictDescription")

'Dict for Sort Code -SS 2/21/22
F.Data.Dictionary.CreateFromSQL("dictSortCode","con","SELECT RTRIM(Part), RTRIM(CODE_SORT) From INVENTORY_MSTR")
F.Data.Dictionary.SetDefaultReturn("dictSortCode","")
F.Data.DataTable.FillFromDictionary("dtWIP", "dictSortCode", "PART", "SORT_CODE")
F.Data.Dictionary.Close("dictSortCode")

F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtWIP.RowCount--,1)

	V.Local.sJob.Set(V.DataTable.dtWIP(V.Local.iCnt).JOB!FieldValTrim)
	V.Local.sSuffix.Set(V.DataTable.dtWIP(V.Local.iCnt).SUFFIX!FieldValTrim)
	V.Local.fUnitsCompl.Set(0.00)
	V.Local.fTotHrsActual.Set(0.00)
	V.Local.fTotAmtMaterial.Set(0.00)
	V.Local.fTotEstMatCost.Set(0.00)
	V.Local.fHrsActual.Set(0.00)
	F.Intrinsic.String.Build("{0}{1}", V.Local.sJob.Trim, V.Local.sSuffix.Trim, V.Local.sJS)
	F.Intrinsic.String.Build("JS = '{0}' ", V.Local.sJS.Trim, V.Local.sFilter)
	F.Data.DataTable.Select("dtWIP", V.Local.sFilter,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***NORETURN***", "OR", V.Local.sRet.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*", V.Local.sRet)
		F.Intrinsic.Control.For(V.Local.iCnt2, V.Local.sRet.LBound, V.Local.sRet.UBound,1)
			v.Local.sSeq.Set(V.DataTable.dtWIP(V.Local.sRet(V.Local.iCnt2).Long).SEQ!FieldValTrim) 
			F.Intrinsic.String.Build("SELECT HOURS_ACTUAL FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}' AND LMO = 'L'", V.Local.sJob.Trim, V.Local.sSuffix.Trim, V.Local.sSeq.Trim, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.fHrsActual)
			F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
				V.Local.fTotHrsActual.Set(V.Local.fHrsActual)
				V.Local.fUnitsCompl.Set(V.DataTable.dtWIP(V.Local.sRet(V.Local.icnt2).Long).UNITS_COMPLETE!FieldVal)
			F.Intrinsic.Control.Else
				f.Intrinsic.Math.Add(V.Local.fHrsActual, V.Local.fTotHrsActual, V.Local.fTotHrsActual)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt2)

		F.Intrinsic.Control.If(V.Local.fTotHrsActual,>,0.00000000)
		
			F.Intrinsic.String.Build("SELECT PART,  UNITS FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND LMO = 'M' AND SEQ < 900000 ", V.Local.sJob.Trim, V.Local.sSuffix.Trim, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sParts)
			F.Intrinsic.Control.If(V.Local.sParts,<>,"")
				F.Intrinsic.String.Split(V.Local.sParts,"#$#", V.Local.sParts)
				F.Intrinsic.Control.For(V.Local.iCnt3, 0, V.Local.sParts.UBound,1)
					F.Intrinsic.String.Split(V.Local.sParts(V.Local.iCnt3), "*!*", V.Local.sPartRate)
					V.Local.sMaterialPart.Set(V.Local.sPartRate(0).Trim)
					V.Local.fUnit.Set(V.Local.sPartRate(1).Float)
					f.Intrinsic.String.Build("SELECT COST FROM V_INVENTORY_COST WHERE PART = '{0}'", V.Local.sMaterialPart.Trim, V.Local.sSQL)
					f.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet2)
					F.Intrinsic.Control.If(V.Local.sRet2,<>,"")
						V.Local.fCost.Set(V.Local.sRet2.Float)
						F.Intrinsic.Math.Mult(V.Local.fUnit, V.Local.fCost, V.Local.fAmtMaterial)
						F.Intrinsic.Control.If(V.Local.iCnt3,=,0)
							V.Local.fTotAmtMaterial.Set(V.Local.fAmtMaterial)
						F.Intrinsic.Control.Else
							F.Intrinsic.Math.Add(v.Local.fTotAmtMaterial, V.Local.fAmtMaterial, v.Local.fTotAmtMaterial)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				f.Intrinsic.Control.Next(V.Local.iCnt3)
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.Math.Mult(V.Local.fTotAmtMaterial, V.Local.fUnitsCompl, V.Local.fTotEstMatCost)
		F.Intrinsic.Control.EndIf
		F.Data.DataTable.SetValue("dtWIP", V.Local.sRet(0).Long, "TOT_EST_MAT_COST", V.Local.fTotEstMatCost)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)


Gui.f_Main.GsGCWIP.Visible(False)
F.Intrinsic.Control.For(V.Local.iCnt, 0,V.DataTable.dtWIP.RowCount--,1)
	F.Data.DataTable.AddRow("dtWO", "JOB", V.DataTable.dtWIP(V.Local.iCnt).JOB!FieldValTrim, "SUFFIX", V.DataTable.dtWIP(v.Local.iCnt).SUFFIX!FieldvalTrim, "SORT_CODE",V.DataTable.dtWIP(v.Local.iCnt).SORT_CODE!FieldvalTrim, "PART", V.DataTable.dtWIP(V.Local.iCnt).PART!FieldValTrim, "DESCRIPTION", V.DataTable.dtWIP(V.Local.iCnt).DESCRIPTION!FieldValTrim,  "SEQ", V.DataTable.dtWIP(V.Local.iCnt).SEQ!FieldValTrim, "WC", V.DataTable.dtWIP(V.Local.iCnt).WC!FieldValTrim, "DEPT", V.DataTable.dtWIP(V.Local.iCnt).DEPT!FieldValTrim,"COST", V.DataTable.dtWIP(V.Local.iCnt).COST!FieldVal, "GOOD_PCS", V.DataTable.dtWIP(V.Local.iCnt).UNITS_COMPLETE!FieldVal, "EXT_LABOR_COST", V.DataTable.dtWIP(V.Local.iCnt).EXT_LABOR_COST!FieldVal, "TOT_EST_MAT_COST", V.DataTable.dtWIP(V.Local.iCnt).TOT_EST_MAT_COST!FieldVal, "PARTIALS", V.DataTable.dtWIP(V.Local.iCnt).PARTIALS!FieldVal)
F.Intrinsic.Control.Next(V.Local.iCnt)
Gui.f_Main.GsGCWIP.Visible(True)

F.Intrinsic.UI.CloseWaitDialog
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6266", "ProjectTitle", "Work in Process Cutoff Report", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdLoad_Click.End

Program.Sub.cmdExport_Click.Start
F.Intrinsic.Control.Try
V.Local.sFile.Declare(String)

F.Intrinsic.String.Build("{0}\GCG_6266_WIPCutoff_{1}.xlsx", V.Caller.LocalGSSTempDir, V.Ambient.Date.FormatYYYYMMDD, V.Local.sFile)
Gui.f_Main.GsGCWIP.Export(V.Local.sFile, "xlsx")
F.Intrinsic.Task.ShellExec(0, "", V.Local.sFile, "", "",1)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6266", "ProjectTitle", "Work in Process Cutoff Report", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.f_Main_UnLoad.Start
F.Intrinsic.Control.Try

F.ODBC.Connection!con.Close

F.Intrinsic.Control.End
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6266", "ProjectTitle", "Work in Process Cutoff Report", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$bbaker$}$20220126132821761$}$pM7xsHplA2E9VCTenDTJ47gi1rF/t66WK1RmmyJNQFSTm01I+utZsvGY+f1GnUhs1FIwgu9BN/w=
Program.Sub.Comments.End